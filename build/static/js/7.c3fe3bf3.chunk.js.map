{"version":3,"sources":["components/Loader.js","pages/login/index.js"],"names":["Loader","tip","size","className","connect","user","loading","email","dispatch","Form","useForm","form","history","useHistory","useEffect","push","layout","onFinish","data","type","userEmail","Item","name","rules","required","message","shouldUpdate","placeholder","prevValues","currentValues","htmlType"],"mappings":"4GAAA,0BAOeA,IAJf,WACE,OAAO,cAAC,IAAD,CAAMC,IAAI,aAAaC,KAAK,QAAQC,UAAU,c,iIC+CxCC,uBA5CS,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,QAAX,MAAmC,CACzDC,MADsB,EAAoBA,MAE1CD,aA0CaF,EAvCf,YAA8C,IAA7BE,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAAY,EAC5BC,IAAKC,UAAbC,EADoC,oBAErCC,EAAUC,cAUhB,OARAC,qBAAU,WACJP,GAAOK,EAAQG,KAAK,WACvB,CAACR,IAMAD,EAAgB,cAAC,IAAD,IAGlB,cAAC,IAAD,CAAMK,KAAMA,EAAMK,OAAO,SAASC,SAPjB,SAACC,GAClBV,EAAS,CAAEW,KAAM,aAAcZ,MAAOW,EAAKE,aAMajB,UAAU,aAAlE,SACE,sBAAKA,UAAU,mBAAf,UACE,8BACE,cAAC,IAAKkB,KAAN,CACEC,KAAK,YACLC,MAAO,CAAC,CAAEC,UAAU,EAAML,KAAM,QAASM,QAAS,uBAClDC,aAAa,OAHf,SAKE,cAAC,IAAD,CAAOC,YAAY,mBAAmBxB,UAAU,oBAIpD,8BACE,cAAC,IAAKkB,KAAN,CAAWK,aAAc,SAACE,EAAYC,GAAb,OAA+BD,IAAeC,GAAvE,SACE,cAAC,IAAD,CAAQC,SAAS,SAASX,KAAK,UAA/B","file":"static/js/7.c3fe3bf3.chunk.js","sourcesContent":["import React from 'react';\nimport { Spin } from 'antd';\n\nfunction Loader() {\n  return <Spin tip=\"Loading...\" size=\"large\" className=\"spinner\" />;\n}\n\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Input, Button, Form } from 'antd';\nimport Loader from '../../components/Loader';\nimport 'antd/dist/antd.css';\n\nconst mapStateToProps = ({ user: { loading, email } }) => ({\n  email,\n  loading,\n});\n\nfunction Login({ loading, email, dispatch }) {\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (email) history.push('/game');\n  }, [email]);\n\n  const checkLogin = (data) => {\n    dispatch({ type: 'user/LOGIN', email: data.userEmail });\n  };\n\n  if (loading) return <Loader />;\n\n  return (\n    <Form form={form} layout=\"inline\" onFinish={checkLogin} className=\"login-form\">\n      <div className=\"center-div-login\">\n        <div>\n          <Form.Item\n            name=\"userEmail\"\n            rules={[{ required: true, type: 'email', message: 'Please enter Email' }]}\n            shouldUpdate=\"true\"\n          >\n            <Input placeholder=\"Enter your email\" className=\"login-input\" />\n          </Form.Item>\n        </div>\n\n        <div>\n          <Form.Item shouldUpdate={(prevValues, currentValues) => prevValues !== currentValues}>\n            <Button htmlType=\"submit\" type=\"primary\">\n              Login\n            </Button>\n          </Form.Item>\n        </div>\n      </div>\n    </Form>\n  );\n}\n\nexport default connect(mapStateToProps)(Login);\n"],"sourceRoot":""}