{"version":3,"sources":["components/Loader.js","components/Content.js","components/VirtualKeyboard.js","components/Hangman.js","pages/game/index.js"],"names":["Loader","tip","size","className","H1","children","style","H2","keyBoard","Keyboard","guessWords","guessWord","map","row","idx","key","onClick","disabled","includes","Hangman","attempts","console","log","top","height","width","fill","stroke","strokeWidth","strokeLinecap","x1","y1","x2","y2","cx","cy","r","contentStyles","title","hint","connect","user","loading","email","game","dispatch","useEffect","startGame","type","word","gameOver","msg","character"],"mappings":"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","file":"static/js/5.5844c82f.chunk.js","sourcesContent":["import React from 'react';\nimport { Spin } from 'antd';\n\nfunction Loader() {\n  return <Spin tip=\"Loading...\" size=\"large\" className=\"spinner\" />;\n}\n\nexport default Loader;\n","import React from 'react';\n\nexport const H1 = ({ children, style = {}, className }) => {\n  return (\n    <div style={style} className=\"game-content\">\n      <h1 className={className}>{children}</h1>\n    </div>\n  );\n};\n\nexport const H2 = ({ children, style = {}, className }) => {\n  return (\n    <div style={style} className=\"game-content\">\n      <h2 className={className}>{children}</h2>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button } from 'antd';\n\nconst keyBoard = [\n  ['a', 'b', 'c', 'd', 'e', 'f', 'g'],\n  ['h', 'i', 'j', 'k', 'l', 'm', 'n'],\n  ['o', 'p', 'q', 'r', 's', 't', 'u'],\n  ['v', 'w', 'x', 'y', 'z'],\n];\n\nfunction Keyboard({ guessWords = [], guessWord, className }) {\n  return (\n    <div className={className}>\n      {keyBoard.map((row, idx) => (\n        <div key={idx} className=\"keyboard\">\n          {row.map((key) => {\n            return (\n              <Button\n                onClick={() => guessWord(key)}\n                disabled={guessWords.includes(key) && true}\n                className=\"keyboard-key\"\n                key={key}\n              >\n                {key}\n              </Button>\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Keyboard;\n","import React from 'react';\n\nfunction Hangman({ attempts = 6 }) {\n  console.log(attempts);\n  return (\n    <div className=\"game-content\" style={{ top: '10%' }}>\n      <svg\n        height=\"200\"\n        width=\"200\"\n        style={{\n          fill: 'transparent',\n          stroke: 'black',\n          strokeWidth: '4px',\n          strokeLinecap: 'round',\n        }}\n      >\n        <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\"></line>\n        <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\"></line>\n        <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\"></line>\n        <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\"></line>\n\n        {attempts < 6 && <circle cx=\"140\" cy=\"70\" r=\"20\"></circle>}\n        {attempts < 5 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\"></line>}\n        {attempts < 4 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\"></line>}\n        {attempts < 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\"></line>}\n        {attempts < 2 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\"></line>}\n        {attempts < 1 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\"></line>}\n      </svg>\n    </div>\n  );\n}\n\nexport default Hangman;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport { H1, H2 } from '../../components/Content';\nimport Keyboard from '../../components/VirtualKeyboard';\nimport Loader from '../../components/Loader';\nimport Hangman from '../../components/Hangman';\n\nconst mapStateToProps = ({ user: { loading, email }, game }) => ({\n  email,\n  loading,\n  game,\n});\n\nconst contentStyles = {\n  title: { top: '30%' },\n  hint: { top: '40%' },\n  attempts: { top: '50%' },\n};\n\nfunction Game({ email, dispatch, game }) {\n  useEffect(() => {\n    if (email) {\n      startGame();\n    }\n  }, [email]);\n\n  const startGame = () => {\n    dispatch({ type: 'game/START_GAME', email });\n  };\n\n  const guessWord = (character) => {\n    dispatch({ type: 'game/ATTEMPT', character, email });\n  };\n\n  if (game.loading) return <Loader />;\n\n  return (\n    <div>\n      <Hangman attempts={game?.attempts} />\n      <H1 style={contentStyles.title}>{game?.word}</H1>\n      {game.gameOver ? (\n        <div>\n          <H2 style={contentStyles.hint}>{game?.msg}</H2>\n          <div className=\"game-content\" style={contentStyles.attempts}>\n            <Button type=\"primary\" onClick={startGame}>\n              Start Again\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <H2 style={contentStyles.hint}>Hint: {game?.hint}</H2>\n          <H2 style={contentStyles.attempts}>Attempts left: {game?.attempts}</H2>\n        </div>\n      )}\n      <Keyboard className=\"center-div\" guessWord={guessWord} guessWords={game?.guessWords} />\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(Game);\n"],"sourceRoot":""}