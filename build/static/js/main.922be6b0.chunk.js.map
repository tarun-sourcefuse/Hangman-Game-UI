{"version":3,"sources":["redux/user/actions.js","redux/user/reducer.js","redux/game/actions.js","redux/game/reducer.js","redux/reducer.js","services/axios/apiClient.js","services/axios/user/index.js","redux/user/saga.js","services/axios/game/index.js","redux/game/saga.js","redux/saga.js","layouts/index.js","router.js","index.js"],"names":["actions","SET_STATE","LOGIN","initialState","email","userReducer","state","action","type","payload","START_GAME","ATTEMPT","word","gameReducer","config","baseURL","process","headers","apiClient","axios","create","login","a","get","then","response","Error","data","user","error","msg","catch","err","console","log","notification","open","message","description","icon","CloseOutlined","style","color","rootSaga","put","loading","call","all","takeEvery","createGameSession","guessWord","character","game","gameOver","withRouter","connect","children","pathname","useLocation","history","useHistory","push","routes","path","Component","lazy","exact","location","map","render","fallback","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","combineReducers","compose","applyMiddleware","run","sagas","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.922be6b0.chunk.js","sourcesContent":["const actions = {\n  SET_STATE: 'user/SET_STATE',\n  LOGIN: 'user/LOGIN',\n};\n\nexport default actions;\n","import actions from './actions';\n\nconst initialState = {\n  email: null,\n};\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_STATE:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n}\n","const actions = {\n  SET_STATE: 'game/SET_STATE',\n  START_GAME: 'game/START_GAME',\n  ATTEMPT: 'game/ATTEMPT',\n};\n\nexport default actions;\n","import actions from './actions';\n\nconst initialState = {\n  word: null,\n};\n\nexport default function gameReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_STATE:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user/reducer';\nimport game from './game/reducer';\n\nexport default () =>\n  combineReducers({\n    user,\n    game,\n  });\n","import axios from 'axios';\n\nconst config = {\n  baseURL: `${process.env.REACT_APP_API_END_POINT}/api`,\n  headers: { 'Content-Type': 'application/json' },\n};\n\nconst apiClient = axios.create(config);\n\nexport default apiClient;\n","import React from 'react';\nimport apiClient from '../apiClient';\nimport { notification } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nexport async function login({ email }) {\n  return apiClient\n    .get(`/login?email=${email}`)\n    .then((response) => {\n      if (!response) {\n        throw new Error('No response');\n      }\n\n      const {\n        data: { data: user, error, msg },\n      } = response;\n\n      if (error) throw msg;\n\n      return user;\n    })\n    .catch((err) => {\n      console.log(err);\n      notification.open({\n        message: 'Something Bad Happens',\n        description: 'Please try again later',\n        icon: <CloseOutlined style={{ color: '#108ee9' }} />,\n      });\n    });\n}\n","import { all, takeEvery, put, call } from 'redux-saga/effects';\nimport actions from './actions';\nimport { login } from '../../services/axios/user';\n\nexport function* LOGIN({ email }) {\n  yield put({\n    type: 'user/SET_STATE',\n    payload: {\n      loading: true,\n    },\n  });\n\n  const user = yield call(login, { email }) || {};\n\n  yield put({\n    type: 'user/SET_STATE',\n    payload: {\n      loading: false,\n      email: user?.email,\n    },\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actions.LOGIN, LOGIN)]);\n}\n","import React from 'react';\nimport apiClient from '../apiClient';\nimport { notification } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nexport async function createGameSession({ email }) {\n  return apiClient\n    .get(`/start-game?email=${email}`)\n    .then((response) => {\n      if (!response) {\n        throw new Error('No response');\n      }\n\n      const {\n        data: { data: user, error, msg },\n      } = response;\n\n      if (error) throw msg;\n\n      return user;\n    })\n    .catch((err) => {\n      console.error(err);\n      notification.open({\n        message: 'Something Bad Happens',\n        description: 'Please try again later',\n        icon: <CloseOutlined style={{ color: '#108ee9' }} />,\n      });\n    });\n}\n\nexport async function guessWord({ email, character }) {\n  return apiClient\n    .get(`/guess-word?email=${email}&character=${character}`)\n    .then((response) => {\n      if (!response) {\n        throw new Error('No response');\n      }\n\n      const {\n        data: { data: user, error, msg },\n      } = response;\n\n      if (error) throw msg;\n\n      return { ...user, msg };\n    })\n    .catch((err) => {\n      console.error(err);\n      notification.open({\n        message: 'Something Bad Happens',\n        description: 'Please try again later',\n        icon: <CloseOutlined style={{ color: '#108ee9' }} />,\n      });\n    });\n}\n","import { all, takeEvery, put, call } from 'redux-saga/effects';\nimport actions from './actions';\nimport { createGameSession, guessWord } from '../../services/axios/game';\n\nexport function* START_GAME({ email }) {\n  yield put({\n    type: 'game/SET_STATE',\n    payload: {\n      loading: true,\n    },\n  });\n\n  const game = yield call(createGameSession, { email }) || {};\n\n  yield put({\n    type: 'game/SET_STATE',\n    payload: {\n      loading: false,\n      gameOver: false,\n      ...game,\n    },\n  });\n}\n\nexport function* ATTEMPT({ email, character }) {\n  yield put({\n    type: 'game/SET_STATE',\n    payload: {\n      loading: true,\n    },\n  });\n\n  const game = yield call(guessWord, { email, character }) || {};\n\n  yield put({\n    type: 'game/SET_STATE',\n    payload: {\n      loading: false,\n      ...game,\n    },\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actions.START_GAME, START_GAME)]);\n  yield all([takeEvery(actions.ATTEMPT, ATTEMPT)]);\n}\n","import { all } from 'redux-saga/effects';\nimport user from './user/saga';\nimport game from './game/saga';\n\nexport default function* rootSaga() {\n  yield all([user(), game()]);\n}\n","import React, { Fragment } from 'react';\nimport { withRouter, useLocation, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst mapStateToProps = ({ user }) => ({ user });\n\nconst Layout = ({ children, user }) => {\n  let { pathname } = useLocation();\n  let history = useHistory();\n\n  //check if logged in\n  if (pathname !== '/login' && !user?.email) history.push('/login');\n\n  return <Fragment>{children}</Fragment>;\n};\n\nLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n  user: PropTypes.element.isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps)(Layout));\n","import React, { lazy, Suspense } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport Layouts from './layouts';\n\nconst routes = [\n  {\n    path: '/login',\n    Component: lazy(() => import('./pages/login')),\n    exact: true,\n  },\n  {\n    path: '/game',\n    Component: lazy(() => import('./pages/game')),\n    exact: true,\n  },\n  {\n    path: '/result',\n    Component: lazy(() => import('./pages/result')),\n    exact: true,\n  },\n];\n\nconst mapStateToProps = ({ user }) => user;\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Layouts>\n        <Switch location={location}>\n          {routes.map(({ path, Component, exact }) => (\n            <Route\n              path={path}\n              key={path}\n              exact={exact}\n              render={() => {\n                return (\n                  <div>\n                    <Suspense fallback={null}>\n                      <Component />\n                    </Suspense>\n                  </div>\n                );\n              }}\n            />\n          ))}\n        </Switch>\n      </Layouts>\n    </BrowserRouter>\n  );\n};\n\nexport default connect(mapStateToProps)(Router);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './redux/reducer';\nimport sagas from './redux/saga';\nimport Router from './router';\n\n// middlewares\nconst history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\n// css\nimport './index.css';\n\n// create redux store\nconst store = createStore(reducers(history), compose(applyMiddleware(...middlewares)));\nsagaMiddleware.run(sagas);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history} />\n  </Provider>,\n  document.getElementById('root')\n);\n\nexport { store, history };\n"],"sourceRoot":""}